create database ineuron_task;

use ineuron_task;

/* -- TASK 1-----*/

CREATE TABLE SHOPPING_HISTORY (
PRODUCT VARCHAR(10) NOT NULL,
QUANTITY INT NOT NULL,
UNIT_PRICE INT NOT NULL
);


INSERT INTO SHOPPING_HISTORY VALUES
('MILK',3,10),
('BREAD',7,3),
('BREAD',5,2);


SELECT * FROM SHOPPING_HISTORY;


SELECT PRODUCT, SUM(QUANTITY * UNIT_PRICE) AS TOTAL_PRICE
FROM SHOPPING_HISTORY
GROUP BY PRODUCT;


/* -- TASK 2 ----*/

CREATE TABLE PHONES (
NAME VARCHAR(20) NOT NULL UNIQUE,
PHONE_NUMBER INT NOT NULL UNIQUE 
);


INSERT INTO PHONES VALUES
('JACK', 1234),
('LENA', 3333),
('MARK', 9999),
('ANNA', 7582);


CREATE TABLE CALLS (
ID INT NOT NULL,
CALLER INT NOT NULL,
CALLEE INT NOT NULL,
DURATION INT NOT NULL,
UNIQUE(ID)
);


INSERT INTO CALLS VALUES
(25, 1234, 7582, 8),
(7, 9999, 7582, 1),
(18, 9999, 3333, 4),
(2, 7582, 3333, 3),
(3, 3333, 1234, 1),
(21, 3333, 1234, 1);


SELECT * FROM PHONES;
SELECT * FROM CALLS;


SELECT P.NAME
FROM PHONES P
JOIN CALLS C
ON P.PHONE_NUMBER = C.CALLER OR P.PHONE_NUMBER = C.CALLEE
GROUP BY P.NAME
HAVING SUM(C.DURATION) >= 10
ORDER BY P.NAME;



/* ---- task 3 ----*/

CREATE TABLE TRANSACTIONS (
AMOUNT INT NOT NULL,
`DATE` DATE NOT NULL
);


INSERT INTO TRANSACTIONS VALUES
(1000, '2020-01-06'),
(-10, '2020-01-14'),
(-75, '2020-01-20'),
(-5, '2020-01-25'),
(-4, '2020-01-29'),
(2000, '2020-03-10'),
(-75, '2020-03-12'),
(-20, '2020-03-15'),
(40, '2020-03-15'),
(-50, '2020-03-17'),
(200, '2020-10-10'),
(-200, '2020-10-10');


SELECT * FROM TRANSACTIONS;


SELECT SUM(AMOUNT)-(SELECT (12 - COUNT(DISTINCT MONTH(`DATE`))) * 5 AS CHARGE 
FROM TRANSACTIONS
WHERE AMOUNT<0
GROUP BY MONTH(`Date`)
HAVING SUM(AMOUNT) >= -100 AND COUNT(MONTH(`DATE`)) >= 3) AS BALANCE
FROM TRANSACTIONS;
